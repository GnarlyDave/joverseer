Releasing jOverseer
===================

JOverseer has multiple artifacts as a result of the release process.
There are 3 platforms:
Windows
MacOS
Linux

There is a different program that installs jOverseer for each platform.

In addition, there is an latestupdate.zip which contains just the most recent changed parts, that an existing running jOverseer can download to update itself.
The latestupdate.zip is theoretically platform independent, but in practice the MacOS version has a slightly different version of jidecommon.jar.

Appveyor.com automatically builds the Windows and Linux versions when the github master branch is updated.
Travis.com used to do the same for MacOS - but no longer.
A local version of MacOS is required to build and release jOverseer for MacOS.

1. Bump the version in
main/resources/ctx/jideApplicationContext.xml
XPath:
 //beans/bean[@id='applicationDescriptor']/property[@name='version']
   @value='1.x.x'

 //beans/bean[@id='applicationDescriptor']/property[@name='buildId']
   @value='2014-x-x'

1b. Bump the version in
jOverseerRelease/src/jOverseerLauncher.xml
XPath:
//launch4jConfig/versionInfo/productVersion='1.x.x.0'
//launch4jConfig/versionInfo/txtProductVersion='1.x.x.0'

2. update the version in the joverseerjar/resources/changelog.txt

3. edit and update jOverseerRelease/src/feed.xml

4. commit to github on the master branch.
4b. update references to the latest version on github wiki:
https://github.com/JOverseer/joverseer/wiki
https://github.com/JOverseer/joverseer/wiki/Installation-Instructions

5a. Appveyor.com should wake up and build 

5b. compile (manual process if local) 
  from eclipse by clicking on each component's build.xml in dependency order;
  txt2xmljar
  orderchecker
  joverseerupdaterjar
  joverseerjar
  
  and pick the appropriate target in
  joverseerRelease (build.xml)
  
5c. or run buildjars.bat

6a. copy from
6b. ftp latestupdate.zip to middleearthgames.com


(delete the registry entry if testing)

(make sure update/update.jar is present)

start joverseer.

build the windows installer
 from jOverseerRelease\build.xml
using the target windowsInstaller
upload joverseer-setupxxxxx.exe to website

build the macOS installer
 from jOverseerRelease\build.xml
using the target MacOSInstaller
(requires a MacOS computer)
upload the *.pkg file to website

upload zip file for linux users?

update the website and wiki pages.

Remember that the updaters will not trigger until the feed.xml has a higher version number, so do that last.
No longer true as of 1.16.3 you can manually force a check for update and force the update to happen.

Checklist of types of users
---------------------------
1. new Windows users
	a) using .exe installer
	b) using .zip 
2. new MacOS users
	a) using .pkg installer
	b) using .zip
3. new Linux users
	using .zip
4. updating windows users
5. updating MacOS users
6. updating Linux users
7. Beta channel users
8. users with java version < v8 not supported
9. users with java version 8..14
10. users with java version 15+

Beta
----
The betachannel is similar, but uses betafeed.xml and latestbetaupdate.zip

MacOS
=====
Building with eclipse works.
Install your desired version of eclipse (I'm currently running Oxygen).
Install Homebrew (http://brew.sh) if you haven't already.
Run 'brew install git'

you will need to fix the user library locations for your specific install and version of java.
(ctl-click on the top level of the package explorer and select Build Path... from the popup menu ...)

you should be able to run and debug.
If you get exceptions about bad cast for Renderer then copy jide-common-MacOS.jar over jide-common.jar .
Problems with jGoodies/looks/FontPolicy mean you're missing looks.jar from the User Library JGoodies.

Run 'brew install ant' if you are going to work outside eclipse.

In eclipse, open an Ant window and add each build.xml
Then from the Ant window you can invoke each build.xml in order by selecting the name then the green play icon.
The order to default build is
txt2xmljar
orderchecker
joverseerupdaterjar
joverseerjar

JoverseerRelease has multiple targets, pick the one you need.
Note that the outputs of the build.xml are distinct from the classes used to debug/run joverseer in eclipse, so they may not always be in sync.

Packaging for releases on windows and mac, and building update bundles can all be built from targets
in the jOverseerRelease/build.xml either inside or outside eclipse.

 packaging notes
=====================
Run 'brew install launch4j'
Run 'brew cask install packages'

At the moment a Mac is required to create the pkg.
Install 'Packages' from http://s.sudre.free.fr/Software/Packages/about.html (or use brew as above)
We also use 
https://github.com/tofi86/universalJavaApplicationStub
to launch a java program on MacOS without worrying about which JVM is used.
The Java VM options are set in Info.plist (an xml file)
The jOverseer.icns file is one I created from public domain clipart from openclipart.org, and  I place it in the public domain too.
The installer installs using admin permissions in /Applications
The logfiles appear as $TMPDIR/joverseer* so check there for problems.
run 'Packages' on jOverseer.pkgproj to work out how to lay out the files as input.
build the package from within 'Packages' and upload the 17MB installer file.
When the subsequent installer pkg is run, macos may complain about it being from the internet.
Either control-left click the pkg file and say I trust it, or remove the extended attributes from the file....lookup the xattr command (xattr -l and -d)
The installer gives you the option to install somewhere else...I have not tried it.

do windows builds, then copy jOverseerRelease and launch4j(to be removed from the process later) to a mac.
run ant MacOSInstaller
ftp joverseer

Note: make sure line endings on the mac files are unix style. Problems can stop the launcher to run with a 'no such file or directory' in the console log.

Autoupdate notes
================

version 1.0.12 has new updater technology.


spotting new versions
---------------------
The joverseer application checks the RSS feed for notification of a new release.
"http://www.middleearthgames.com/software/joverseer/feed.xml"
version 1.0.12 has this hard-wired.
Later versions use the preference
 updates.RSSFeed
 in 
 resources/ctx/preferences-context.xml

The official beta RSS Feed is
"http://www.middleearthgames.com/software/joverseer/betafeed.xml"

Version numbers are compared numerically.
The middle 0 was dropped after 1.0.12, the next version being 1.13.0.
At the same time, it was decided to use odd number versions as beta versions.
That way, the timing of beta and stable releases can be decoupled, and still be consistent numerically.

The checking done in the code:
com.jidesoft.spring.richclient.docking.JideApplicationLifecycleAdvisor class, method onWindowOpened().


update.jar
----------
The key thing about auto updating in general is that at some point you have to spawn and switch to a separate process, so you can change the original files.

The updater is packaged as a separate jar file: update.jar.
It takes one optional argument, the url of the zipfile to download.
Normally it is the contents of the first url found in the RSS feed.


The source files

com.middleearthgames.updater.UpdateChecker  - checks the rss feed and compares the version
com.middleearthgames.updater.IThreepartVersion - interface for comparing 2 versions.
com.middleearthgames.updater.Main_Gui - The crude UI for the standalone updater part.
com.middleearthgames.updater.UpdateInfo - lists the changelog contents, and a lot of the complications needed to get updates to work under windows.

so UpdateInfo.update()
spawns java -jar update/update.jar 'download url'
if on linux/unix/mac
and for windows runs
jOverseerUpdate.exe


jOverseerUpdater.exe is a packaged version of java -jar update ....
for windows and tagged to request admin privileges.

update.Main_Gui.java is a simple java AWT application.
moves it to the appropriate place
deletes the initial version of the unpacked files.
and executes any updateapp.jar to execute any version-specific updates beyond just files updates.
NB. the cancel button just exits...it doesn't stop the download or undo the overwrite of files.


How to test updating
====================
To avoid spamming incomplete releases on the beta or live channel use:
http://www.middleearthgames.com/software/joverseer/testfeed.xml
http://www.middleearthgames.com/software/joverseer/testupdate.zip
remember to remove the 'lastupdated' preference in joverseer to persuade jOverseer to actually check for updates.
HKEY_CURRRENT_USER\Software\JavaSoft\Prefs\org\joverseer\ui /last/Version/Check/Date
MacOS: use 'Pref Setter'. Windows: use regedit.
